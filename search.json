[{"title":"第5周作业","url":"http://muo123.gitee.io/2020/10/07/h5/","content":"第五周作业\n\nPart 1\n\n与门的三种表现形式：与门是实现逻辑“乘”运算的电路，只有当所有输入端都是高电平（逻辑1）时，输出才为高电平。\n异或门的三种表现形式异或门是实现逻辑异或的逻辑门，只有当输入的两个电平相异，输出才为高电平。\n(A + B)(B + C)电路逻辑图如图\n真值表如下：    \n真值表如下：通过真值表可以知道该逻辑表达式逻辑等价\n\n\nPart 2\n\n电路图如下：\nFill the follow expression(1) $(X_8X_7X_6X_51111)_2$(2) $(X_8X_7X_6X_5X_4’X_3’X_2’X_1’)_2$(3) $(X_8X_7X_6X_5X_4’X_3’X_2’X_1’)_2$\n\n\nPart 3\n概念解释\nLogic gate : A logic gate is an idealized or physical electronic device implementing a Boolean function, a logical operation performed on one or more binary inputs that produces a single binary output.    \nBoolean algebra : In mathematics and mathematical logic, Boolean algebra is the branch of algebra in which the values of the variables are the truth values true and false, usually denoted 1 and 0, respectively.   \n\n存储电路\nFlip-flop中文翻译：触发器\nSR触发器只存储一个位信息0或1\n\n","categories":[],"tags":["homework"]},{"title":"Construct3制作射击小游戏（新手向）","url":"http://muo123.gitee.io/2020/10/04/test2/","content":"Construct3制作射击小游戏（新手向）本教程将指导初学者制作一个简易的射击小游戏\n\n开始\n首先访问Construct3平台，点击相关链接editor.construct.net，即可在浏览器在线制作属于自己的小游戏，并不需要安装或设置相关文件，非常方便。\n\n创建新项目\n单击new project按钮,之后将出现对话框，直接点击create创建新项目即可，然后可以看到类似下面的新建项目。\n\n添加对象\n接下来添加游戏所需要的对象\n\n添加背景\n双击或右键点击空白处选择insert new object,找到Tiled Baekground后双击。此时鼠标会指向十字线，代表图像将要放置的位置，单击布局中间某处，打开图像编辑器。可以选择自己画背景或从文件中导入图片作为游戏的背景。关掉编辑器即可看到自己的背景图，然后右键点击Align选择Cover Layout即可将背景平铺到空白处。为了防止之后添加图像挪动背景，可以选择将背景Lock，右键单击可以看到相关选项。\n\n添加输入对象\n双击或右键打开菜单栏insert new object添加输入对象Mouse或Keyboard，以确保游戏接受鼠标或键盘输入。\n\n添加游戏对象\n按照类似添加背景的方式添加游戏对象：玩家、子弹、精灵以及爆炸图象。双击或右键打开菜单栏添加Sprites,并且分别为图像进行命名防止混淆。\n\n添加行为\n为玩家、子弹、精灵等对象添加行为以让他们按照我们想要的方式进行活动，平台提供的行为有多种选择\n单击对象，找到左边的菜单Behaviors添加行为的方式如下图所示玩家行为：8 direction(8方向移动)、ScorllTo（将镜头聚焦到玩家身上）、BoundToLayout（将玩家的活动范围固定防止移动到背景外）子弹行为：Bullet（子弹运动）、Destroy outside layout（销毁子弹防止移动到背景外）爆炸行为：Fade（爆炸对象出现时采用淡入淡出的动画形式）精灵行为：Bullet（方便系统控制精灵行为）\n\n事件\n首先，单击顶部的选项卡Event sheet1以切换到”事件工作表视图”。事件列表称为事件表 ，你可以为游戏的不同部分或组织使用不同的事件表。\n\n玩家活动\n让玩家按照你所想要的方式活动，例如让玩家视野跟随鼠标，事件如图：具体操作过程如下：\n让玩家能够发射子弹，事件如下：按照所述相关路径执行操作即可，这些不过多叙述。\n\n子弹活动\n\n\n精灵活动\n\n\n使用实例变量\n实例变量允许不同的对象拥有属于自己的属性，变量是可以更改的。我们可以对精灵添加一个实例变量health来让精灵拥有更长的生命值，而不是子弹一碰就发生爆炸。添加过程如图：我们可以设置条件，当子弹击中精灵时，扣除一定健康值，为游戏体验增加趣味性。将原来的事件进行修改如下：此时精灵经受多次射击才会发生爆炸。\n\n使用全局变量\n为了显示我们游戏的分数，需要一个全局变量来显示。右键单击事件工作表底部的空间，选择全局变量。修改之前的事件然后我们需要添加信新图层，用来显示我们的游戏分数。找到屏幕右下角的图层栏：右键单击选择Add layer at top,将名称改为HUD,然后在HUD的属性栏修改Parallax。之后我们需要添加一个文本对象，使用顶部的选项卡切换回布局视图，双击空白处添加文本对象Text,并将它放在左上角，你可以在它的属性栏里修改它的颜色，大小和位置等。最后回到工作事件表，添加事件：\n\n自动生成精灵\n为了让精灵持续出现，我们需要添加如下事件，让系统自动产生精灵。\n\n游戏结束条件\n此时，我们发现玩家是不会自动触发游戏结束的条件，所以我们还要添加事件，让玩家在碰到精灵时游戏结束，添加如下条件：\n\n至此，我们的游戏算是初步完成了，除了上面的事件外，我们还可以继续完善它，例如添加不同的精灵，让精灵随着时间逐渐加速、达到触发条件增加子弹数量等等。\n\n结束\n下面附上我的游戏链接和相关游戏视频：游戏链接：shooter  \n视频链接：shooter体验视频\n","categories":[],"tags":["Tutorials"]},{"title":"第4周作业","url":"http://muo123.gitee.io/2020/09/26/h4/","content":"\n概念解释\n\nASCII : ASCII (/ˈæskiː/  ASS-kee), abbreviated from American Standard Code for Information Interchange, is a character encoding standard for electronic communication. ASCII codes represent text in computers, telecommunications equipment, and other devices. Most modern character-encoding schemes are based on ASCII, although they support many additional characters.   \n)Color : Color (American English), or colour (Commonwealth English), is the characteristic of visual perception described through color categories, with names such as red, orange, yellow, green, blue, or purple. This perception of color derives from the stimulation of photoreceptor cells (in particular cone cells in the human eye and other vertebrate eyes) by electromagnetic radiation (in the visible spectrum in the case of humans).    \n\n\n简答题\n   1) 写出字符“A”,“中”的 ASCII 码、Unicode 码、utf-8 编码。\n  \n\n\n    \n        \n            字符\n            ASCII 码\n            Unicode 码\n             utf-8 编码\n        \n    \n    \n        \n            \"A\"\n            0x41\n            0x0041\n            0x41\n        \n        \n            \"中\" \n            0xd6 / 0xd0\n            0x4e2d\n            0xe4 / 0xb8 / 0xad\n        \n    \n\n\n\n\n\n   1) 黄色(yellow)的RGB编码是\n(0, 255, 255)\n\n\n   3)  从网上下载一个 BMP 格式图像,用图片编辑工具另存在 jpg、 png、tiff 格式。问三种格式中,哪种格式显示质量好?相对于BMP 格式,压缩率各是多少?\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;下载图像不同格式显示对比如下：   \n\n \n\n\ntable th:first-of-type {\n    width: 200px;\n}\n\n\n\n    \n        \n            图片格式\n            占用空间\n            空间比较百分比（与原bmp格式）\n        \n    \n    \n        \n            bmp\n            458 KB (469,638 字节)\n            100%\n        \n        \n            jpg\n            71.4 KB (73,210 字节)\n            16%\n        \n        \n            png\n            261 KB (267,429 字节)\n            57%\n        \n        \n            tiff\n            458 KB (469,816 字节)\n            100%\n        \n    \n\n\n\n\n\n\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;bmp格式经过在线图像压缩器onlineconvertfree转换为不同格式（jpg、png、tiff）后分辨率并没有明显变化，对比属性结果如下：\n\n\n\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;经过比较发现分辨率区别不是很大，但图片占用空间发生了变化   \nbmp &gt; tiff &gt; png &gt; jpg\n\n   1) Winrar压缩文件是lossless, or lossy 方法？    winrar是无损压缩，lossless\n\n","categories":["homework"],"tags":[]},{"title":"第3周作业","url":"http://muo123.gitee.io/2020/09/21/h3/","content":"\n\n计算\n\n1）x = 0100 0011 y = 1111 1001 z = 1011 01102）溢出3）x = 1101 00114）x = 0111 1111 y = 1111 1001 z溢出5）x = 1 . 0016）x = 11001 . 07）x出现精度误差\n\n概念解释\n-Method of complements : In mathematics and computing, the method of complements is a technique to encode a symmetric range of positive and negative integers in a way that they can use the same algorithm (hardware) for addition throughout the whole range.-Byte : The byte is a unit of digital information that most commonly consists of eight bits.-Integer (computer science)\n :  In computer science, an integer is a datum of integral data type, a data type that represents some range of mathematical integers.-Floating point : In computing, floating-point arithmetic (FP) is arithmetic using formulaic representation of real numbers as an approximation to support a trade-off between range and precision.\n阅读“Method of cpmplements”\n1) 假设运算使用n位二进制数，其模数为2n,数 a 为一个用n位二进制表示的常数，数 x 为一个用n位二进制表示的变数，推导如下：a - x = $2^n$ % $2^n$ + (a - x) % $2^n$ = ($2^n$ + (a - x)) % $2^n$ = (a + $2^n$ - x) % $2^n$ = a % $2^n$ + ($2^n$ - x) % $2^n$ = a + ($2^n$ - x)于是 x补码 = $2^n$ - x一个数的全部二进制位取反则得到其反码，由此可知，如果一个数加上它的反码，则此全部二进制位是满的，也就是全部是1，其值为x反码 + x = $2^{n-1}$ + $2^{n-2}$ + … + $2^2$ + $2^1$+ $2^0$ = $2^n$ – 1X反码 = $2^n$ - 1 - x综上可得 : X补码 = X反码 + 1 \n2) 用八进制描述变量x：x = 0361\n\n阅读“Two’s complement”\n1）x = 0xe1 y = 0xffffffe1过程：x = 1110 0001 -&gt; 符号扩展1111 1111 1111 1111 1111 1111 1110 0001 -&gt; y = x -&gt; y = 0xffffffe1\n阅读“Floating point”\n\n答：NaN（NotaNumber，非数）是计算机科学中数值数据类型的一类值，表示未定义或不可表示的值。常在浮点数运算中使用。首次引入NaN的是1985年的IEEE 754浮点数标准。\n","categories":["homework"],"tags":[]},{"title":"第2周作业","url":"http://muo123.gitee.io/2020/09/21/h2/","content":" 进制转换\n\n\n1分12秒  = (72000)毫秒\n(7A)13 =  (101)10\n(7A)16  =  (122)10\n(7A)16  = (1111010)2 = (172)8\n(1011011)2 = (133)8 = (5B)16\n(678)10  = (1010100110)2 = (1246)8\n(111)2 + (101)2 = (1100)2\n\n\n 关键词解释\n\n-Information   : Information can be thought of as the resolution of uncertainty; it is that which answers the question of \"What an entity is\" and thus defines both its essence and nature of its characteristics.   \n-Positional notation  : Positional notation (or place-value notation, or positional numeral system) denotes usually the extension to any base of the Hindu–Arabic numeral system (or decimal system).\n-Algorithm  :   In mathematics and computer science, an algorithm (/ˈælɡərɪðəm/ (About this soundlisten)) is a finite sequence of well-defined, computer-implementable instructions, typically to solve a class of problems or to perform a computation.\n-)Software bug  : A software bug is an error, flaw or fault in a computer program or system that causes it to produce an incorrect or unexpected result, or to behave in unintended ways.\n\n 英文单词\n\n\n十进制 -&gt;Decimal\n二进制  -&gt;Binary\n八进制   -&gt;Octal\n十六进制  -&gt;Hexadecimal\n\n","categories":["homework"],"tags":[]},{"title":"第1周作业","url":"http://muo123.gitee.io/2020/09/21/h1/","content":" 词条解释\n-Computer : A computer is a machine that can be instructed to carry out sequences of arithmetic or logical operations automatically via computer programming.\n-Computer science   : Computer science is the study of computation and information\n-Software  : Computer software, or simply software, is a collection of data or computer instructions that tell the computer how to work.\n-Software engineering  : Software engineering is the systematic application of engineering approaches to the development of software.[1][2][3] Software engineering is a computing discipline.\n- Alan Turing : Alan Mathison Turing OBE FRS (/ˈtjʊərɪŋ/; 23 June 1912 – 7 June 1954) was an English mathematician, computer scientist, logician, cryptanalyst, philosopher, and theoretical biologist.\n- Moore’s law : Moore’s law is the observation that the number of transistors in a dense integrated circuit (IC) doubles about every two years.\n","categories":["homework"],"tags":[]},{"title":"打印日历的C语言实现","url":"http://muo123.gitee.io/2020/09/14/calendar/","content":" 打印日历的C语言实现\n\n实现nextDate函数，通过调用nextDate函数来打印出2021年的日历    \nint nextDate(int month, int date, int year)\n要求打印出指定日期的下一天，即给出某年某月某日，需返回下一天是多少号。\n具体代码如下：\n\n//***********************************************\n//*** a program to print the calendar of 2021 ***\n//***********************************************\n\n#include &lt;stdio.h&gt;\n\n//this is a function to return the next date of the given day\nint nextDate(int month, int date, int year)&#123;\n    \n    //use two arrays to store the days of leap year and common year\n    int leap_days[13] = &#123;0, 31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31&#125;;\n    int common_days[13] = &#123;0, 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31&#125;;\n    \n    //at first, decide wether it is a leap year\n    if((year % 4 == 0 &amp;&amp; year % 100 != 0) || (year % 400 == 0))&#123;\n        if(date + 1 &gt; leap_days[month])&#123;\n    //if month is December, it means next day is the first day of new year\n            if(month == 12)&#123;\n                year++; month++; date = 1;\n            &#125;\n            else&#123;\n                date++;\n            &#125;\n        &#125;\n        else&#123;\n            date++;\n        &#125;\n    &#125;\n    else&#123;\n        if(date + 1 &gt; common_days[month])&#123;\n            if(month == 12)&#123;\n                year++; month++; date = 1;\n            &#125;\n            else&#123;\n                date++;\n            &#125;\n        &#125;\n        else&#123;\n            date++;\n        &#125;\n    &#125;\n    return date;\n&#125;\n\n\n//this is a function to print the calendar of 2021\nvoid printCalendar()&#123;\n    printf(\"\\n***********************************\\n\");\n    printf(\"* WELCOME TO THE CALENDAR OF 2021 *\\n\");\n    printf(\"***********************************\\n\\n\");\n\n    //the number of each month\n    int days[13] = &#123;0, 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31&#125;;  \n    //pointers of months'name\n    char* months[13] = &#123;\"fault\", \"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"&#125;;\n\n    for(int i = 1; i &lt;= 12; i++)&#123;\n        printf(\"***** %s *****\\n\", months[i]);\n        printf(\"Sun Mon Tue Wed Tus Fri Sat\\n\");\n\n        static int blanks = 5;   //a variable to count the number of the blanks \n        for(int k = 0; k &lt; blanks; k++)&#123;\n            printf(\"    \");\n        &#125;\n\n        for(int j = 0; j &lt; days[i]; j++)&#123;\n            blanks++; \n\n            if(j &lt; 9)&#123;\n                printf(\"%d   \", nextDate(i, j, 2021)); //print blanks to aline\n            &#125;\n            else&#123;\n                printf(\"%d  \", nextDate(i, j, 2021));\n            &#125;\n            //this block is to decide whether to reprint the week\n            if(blanks == 7) &#123;\n                printf(\"\\n\");\n                blanks = 0;\n            &#125;\n        &#125;\n        printf(\"\\n\\n\");\n    &#125;\n&#125;\n\nint main()&#123;\n    printCalendar();\n    return 0;\n&#125;\n\n最后编译输出结果如下图：(截图显示部分输出结果)\n\n","categories":["Problem"],"tags":["Solution"]},{"title":"关于Hexo+Gitee博客搭建时遇到的一些问题以及解决方案","url":"http://muo123.gitee.io/2020/09/13/fault/","content":" 关于Hexo+Gitee博客搭建时遇到的一些问题以及解决方案\n\n\n localhost重定向次数过多\n\n\n对于这个问题，搜过很多方案，例如删除cookies，卸载浏览器重装，删除博客所有内容等，结果都以失败告终。\n出现这样的情况，可能是因为我每次建博客失败，删除文档重来时，一直使用的新建文件夹名称都是hexo，使用hexo s指令生成静态页面时，使得本地访问出现地址循环定向之类的问题（这只是我个人浅陋的想法，我对网页重定向也没有很深入的了解）。\n我最后解决这个问题的方案是删除hexo文档，之后新建文档命名为blog，在blog目录下重新建立博客，再用hexo s指令生成网页，发现最后没有出现重定向次数过多的问题。\n（ps：虽然删档重来的确很难受，我此前已经删档重来了不下十次，所以，这个解决方案对我来说还可以接受）\n\n\n\n Gitee Pages部署失败（主题没有样式或使用hexo d指令无法推送博客内容）\n\n\n主题没有样式的问题，大概是本地生成网页正常，部署到Gitee Pages上后主题消失，页面回到十年前，简直降维打击的感觉。这个我也搜过许多解决方案，例如改变网站配置文件root的路径，将它改为“root: .”（这是指在当前目录搜索，没有样式的原因可能是网站搜索不到相关文件，打开网站检查可以看见一堆404）。不过，之后我发现，不用更改root也可以直接访问页面。当初样式消失的问题可能是当初我不小心修改了某些文件，如果按照教程来做的话，应该不会碰到相关问题。\n无法推送博客的问题，比较难解释，我之前部署了公钥，总出现问题，后来我直接删除了公钥，结果还是存在问题。大概可以排除公钥的因素，不过，如果你想对仓库进行写入操作，公钥必须是个人公钥才行，否则部署时也会部署不上去。之后，我们来谈谈我是如何解决最终问题的。\n最后我发现，问题出现在仓库名称上--xxx.gitee.io。这样命名的仓库名称是万恶的来源，具体原因和解决方案可以在Gitee Page原网页找到。具体是pages的二级目录的问题，只要把仓库名的后缀删去即可，这样就没有了相应配置文件的相对路径问题。\n（注意，你的仓库名必须为你Gitee上的昵称。）\n","categories":["Hexo"],"tags":["Solution"]},{"title":"Hexo+Gitee博客搭建详细教程","url":"http://muo123.gitee.io/2020/09/13/test/","content":" Hexo+Gitee博客搭建详细教程\nHexo是一个快速、简洁且高效的博客框架。Hexo使用Markdown(或其他渲染引擎)解析文章，在几秒内，即可利用靓丽的主题生成静态网页。（节选自Hexo）\n\n\n 一、环境配置\n\n\nGit\n\n\n安装过程详情可以参照以下博客《Windows系统Git安装教程（详解Git安装过程）》https://www.cnblogs.com/xueweisuoyong/p/11914045.html\n\n\nNodejs\n\n\n安装过程详情可以参照以下博客《windows系统下Node.js安装以及环境变量配置》https://www.cnblogs.com/hua-developer/p/12446235.html\n\n（注意，安装目录我使用的是D盘，大家可以按个人喜好选择，以下内容都以安装在D盘为例）\n\n\n 二、Hexo的安装\n\n在D盘（之前所选择的安装目录下）右键Git Bash Here使用如下指令安装Hexo架构\n$ npm install hexo-cli -g\n或指定全局安装\n$ npm install -g hexo\n等待Hexo架构完成（大概几分钟）\n我们在Windows10平台使用Gitee+Hexo搭建博客前，需要先在本地建立一个用来存储个人博客的目录，例如可以选择在D盘新建文件夹blog。\n\n创建文件夹后，只需在blog目录下单击右键启动Git Bash Here,输入如下命令完成博客的初始化\n$ hexo init\n之后依次使用如下指令（依旧在上述端口中）\n$ hexo clean$ hexo generator #或者 hexo g$ hexo server #或者 hexo s\n然后就可以打开本地浏览器搜索http://localhost:4000，查看你的博客了。到此，博客算是完成了初步构建。\n\n\n 三、*博客主题的下载和更换（选择性浏览）\n\nHexo默认的主题是landscape，如果你想更换主题可以尝试在Hexo主题界面下载themes\n\n 具体操作流程如下\n\n搜索主题 -&gt; 点击主题（有的主题可能无法加载） -&gt; 复制网站链接 -&gt;\n在blog文件目录下找到theme文件夹 -&gt; 进入文件夹后右键打开Git Bash Here，输入如下指令\n$ git clone (将网站链接粘贴到此处)\n然后等待一段时间，你所心仪的主题便下好了。之后只需在blog目录下找到_config.yml文件，即网站配置文件。用vs code打开网站配置文件，找到theme一栏\n\n将theme一栏改为你所下载的主题文件名即可。（此处我下载的是hexo-theme-Kaze主题，点击后可以查看kaze主题的相关安装及配置）\n\n\n 四、Gitee的部署\n首先你需要注册Gitee的账号，接下来只需要新建独属于你的仓库，如图\n\n新建仓库名为: (你的昵称)\n例如：muo123\n然后选择语言为HTML，仓库属性为共有public，其余可以不用管，之后点击创建，你就拥有了属于你自己的个性仓库了！\n之后我们需要做的就是把本地的博客部署到Gitee上。首先，我们需要打开网站配置文件\n\n对这几项进行修改，我的配置如下\n\nrepo为你的仓库名，可以在你的Gitee仓库处复制过来\n\n完成这些布置后，只需在blog目录下右键Git Bash输入指令下载插件\n$ npm install hexo-deployer-git --save\n然后Gitee部署三连\n$ hexo clean$ hexo g$ hexo d\n然后你就会发现你的仓库中出现了blog的目录，\n\n接下来点击service（服务），便可以找到Gitee Pages，点击创建就可以看见你梦寐以求的博客啦。\n","categories":["Hexo"],"tags":["Tutorials"]}]